name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'Version Packages')
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
  
      - name: Setup Node.js lts/Iron
        uses: actions/setup-node@v4
        with:
          node-version: lts/Iron

      - name: Enable Corepack
        run: corepack enable
      
      - name: Install the right package manager
        run: corepack install

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Create Tags
        run: pnpm changeset tag
      
      - name: Push tags
        run: git push origin --tags

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        run: pnpm publish

      - name: Get the latest version
        id: get_version
        run: |
          VERSION=$(git tag | sort -V | tail -n 1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get the release body
        id: get_release_body
        run: |
          STRIPPED_VERSION=${VERSION#v}
          RELEASE_BODY=$(awk -v version="$STRIPPED_VERSION" 'BEGIN {print_it=0} /^## / {print_it=0} $0 ~ "## " version {print_it=1} print_it' ./CHANGELOG.md)
          echo "RELEASE_BODY<<EOFMARKER" >> $GITHUB_ENV
          echo "$RELEASE_BODY" >> $GITHUB_ENV
          echo "EOFMARKER" >> $GITHUB_ENV

      - name: Create Github Release
        run: |
          gh release create ${{ env.VERSION }} -t ${{ env.VERSION }} -n "${{ env.RELEASE_BODY }}"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN}}
          

      
  
